<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmacionActualizacionAutor" xml:space="preserve">
    <value>El autor se ha actualizado exitosamente</value>
  </data>
  <data name="ConfirmacionActualizacionGenero" xml:space="preserve">
    <value>El género se ha actualizado exitosamente</value>
  </data>
  <data name="ConfirmacionActualizacionManga" xml:space="preserve">
    <value>El manga se ha actualizado exitosamente</value>
  </data>
  <data name="ConfirmacionBorradoAutor" xml:space="preserve">
    <value>El autor se ha borrado exitosamente.</value>
  </data>
  <data name="ConfirmacionBorradoGenero" xml:space="preserve">
    <value>El género se ha borrado exitosamente.</value>
  </data>
  <data name="ConfirmacionBorradoManga" xml:space="preserve">
    <value>El manga se ha borrado exitosamente</value>
  </data>
  <data name="ConfirmacionCreacionAutor" xml:space="preserve">
    <value>El autor se ha creado exitosamente</value>
  </data>
  <data name="ConfirmacionCreacionGenero" xml:space="preserve">
    <value>El género de manga se ha creado exitosamente</value>
  </data>
  <data name="ConfirmacionCreacionManga" xml:space="preserve">
    <value>El manga se ha creado exitosamente</value>
  </data>
  <data name="ErrorActualizarAutor" xml:space="preserve">
    <value>Ha ocurrido un error al actualizar los datos del autor.</value>
  </data>
  <data name="ErrorActualizarManga" xml:space="preserve">
    <value>Ha ocurrido un error al actualizar los datos del manga.</value>
  </data>
  <data name="ErrorBorradoManga" xml:space="preserve">
    <value>Ha ocurrido un error al borrar el manga</value>
  </data>
  <data name="ErrorBorrarAutor" xml:space="preserve">
    <value>Ha ocurrido un error al borrar el autor</value>
  </data>
  <data name="ErrorConsultaAutor" xml:space="preserve">
    <value>Error inesperado al intentar obtener el autor por id.</value>
  </data>
  <data name="ErrorConsultarTodosAutores" xml:space="preserve">
    <value>Error al intentar consultar los autores.</value>
  </data>
  <data name="ErrorCreacionAutor" xml:space="preserve">
    <value>Ha ocurrido un error al crear el autor.</value>
  </data>
  <data name="ErrorCreacionGenero" xml:space="preserve">
    <value>Ha ocurrido un error al crear el género.</value>
  </data>
  <data name="ErrorCreacionManga" xml:space="preserve">
    <value>Ha ocurrido un error al crear el manga</value>
  </data>
  <data name="ErrorFormatoArchivo" xml:space="preserve">
    <value>La imágen tiene que ser de formato gif, png, jpeg o jpg</value>
  </data>
  <data name="ErrorIdAutor" xml:space="preserve">
    <value>El Id del autor ingresado no existe</value>
  </data>
  <data name="ErrorIdGenero" xml:space="preserve">
    <value>El Id del género ingresado no existe</value>
  </data>
  <data name="ErrorIdIncorrecto" xml:space="preserve">
    <value>El id ingresado no es correcto.</value>
  </data>
  <data name="ErrorIdManga" xml:space="preserve">
    <value>El Id del manga ingresado no existe</value>
  </data>
  <data name="ErrorIdNulo" xml:space="preserve">
    <value>El campo Código no puede ser nulo.</value>
  </data>
  <data name="ErrorNulo" xml:space="preserve">
    <value>El valor esperado no puede ser nulo.</value>
  </data>
  <data name="lblAniadirImagen" xml:space="preserve">
    <value>Imagen</value>
  </data>
  <data name="lblDescripcion" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="lblEdad" xml:space="preserve">
    <value>Edad</value>
  </data>
  <data name="lblEmpresa" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="lblId" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="lblNombre" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="lblNombreAutor" xml:space="preserve">
    <value>Nombre Autor</value>
  </data>
  <data name="lblNombreGenero" xml:space="preserve">
    <value>Nombre Género</value>
  </data>
  <data name="lblPrecio" xml:space="preserve">
    <value>Precio</value>
  </data>
  <data name="lblVolumen" xml:space="preserve">
    <value>No. Volumen</value>
  </data>
  <data name="spanErrorAutor" xml:space="preserve">
    <value>* Por favor seleccione un autor</value>
  </data>
  <data name="spanErrorDescripcionGenero" xml:space="preserve">
    <value>* La descripción del género es obligatoria</value>
  </data>
  <data name="spanErrorDescripcionManga" xml:space="preserve">
    <value>* La descripción del manga es obligatoria</value>
  </data>
  <data name="spanErrorEmpresaAutor" xml:space="preserve">
    <value>* La descripción de la empresa es obligatoria</value>
    <comment>Mensaje de error al valida obligatoriedad de la empresa del autor</comment>
  </data>
  <data name="spanErrorFormatoId" xml:space="preserve">
    <value>El formato del campo Código es incorrecto</value>
  </data>
  <data name="spanErrorFormatoPrecio" xml:space="preserve">
    <value>* El formato del precio no es correcto</value>
  </data>
  <data name="spanErrorGenero" xml:space="preserve">
    <value>* Por favor seleccione un género</value>
  </data>
  <data name="spanErrorId" xml:space="preserve">
    <value>* El campo Id es obligatorio</value>
  </data>
  <data name="spanErrorNombreAutor" xml:space="preserve">
    <value>* El Nombre del autor es obligatorio</value>
    <comment>Mensaje de error al valida obligatoriedad del nombre del autor</comment>
  </data>
  <data name="spanErrorNombreGenero" xml:space="preserve">
    <value>* El Nombre del genero es obligatorio</value>
  </data>
  <data name="spanErrorNombreManga" xml:space="preserve">
    <value>* El nombre del manga es obligatorio</value>
  </data>
  <data name="spanErrorPathImagen" xml:space="preserve">
    <value>* La Imagen es obligatoria</value>
  </data>
  <data name="spanErrorPrecio" xml:space="preserve">
    <value>* El precio del manga es obligatorio</value>
  </data>
  <data name="spanErrorVolumen" xml:space="preserve">
    <value>* El No. del volumen del manga es obligatoria</value>
  </data>
</root>